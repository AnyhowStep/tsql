[
  {
    "messageText": "Type 'null' is not assignable to type 'number | IExpr<{ mapper: Mapper<unknown, number>; usedRef: IUsedRef<never>; }> | IColumn<{ tableAlias: string; columnAlias: string; mapper: Mapper<unknown, number>; }> | IExprSelectItem<{ mapper: Mapper<unknown, number>; tableAlias: string; alias: string; usedRef: IUsedRef<...>; }> | (IQueryBase<...> & IQueryBase<.....'.",
    "code": 2322,
    "category": 1,
    "length": 4,
    "start": 66
  },
  {
    "messageText": "Type 'null' is not assignable to type 'number | IExpr<{ mapper: Mapper<unknown, number>; usedRef: IUsedRef<never>; }> | IColumn<{ tableAlias: string; columnAlias: string; mapper: Mapper<unknown, number>; }> | IExprSelectItem<{ mapper: Mapper<unknown, number>; tableAlias: string; alias: string; usedRef: IUsedRef<...>; }> | (IQueryBase<...> & IQueryBase<.....'.",
    "code": 2322,
    "category": 1,
    "length": 4,
    "start": 94
  },
  {
    "messageText": "Type 'null' is not assignable to type 'number | IExpr<{ mapper: Mapper<unknown, number>; usedRef: IUsedRef<never>; }> | IColumn<{ tableAlias: string; columnAlias: string; mapper: Mapper<unknown, number>; }> | IExprSelectItem<{ mapper: Mapper<unknown, number>; tableAlias: string; alias: string; usedRef: IUsedRef<...>; }> | (IQueryBase<...> & IQueryBase<.....'.",
    "code": 2322,
    "category": 1,
    "length": 4,
    "start": 122
  },
  {
    "messageText": "Type 'null' is not assignable to type 'number | IExpr<{ mapper: Mapper<unknown, number>; usedRef: IUsedRef<never>; }> | IColumn<{ tableAlias: string; columnAlias: string; mapper: Mapper<unknown, number>; }> | IExprSelectItem<{ mapper: Mapper<unknown, number>; tableAlias: string; alias: string; usedRef: IUsedRef<...>; }> | (IQueryBase<...> & IQueryBase<.....'.",
    "code": 2322,
    "category": 1,
    "length": 4,
    "start": 156
  },
  {
    "messageText": {
      "messageText": "Type 'Query<{ fromClause: IFromClause<{ outerQueryJoins: undefined; currentJoins: readonly Join<{ tableAlias: \"inListTable\"; nullable: false; columns: { readonly v: Column<{ tableAlias: \"inListTable\"; columnAlias: \"v\"; mapper: Mapper<unknown, number>; }>; }; ... 4 more ...; mutableColumns: readonly []; }>[]; }>; ... 4 mor...' is not assignable to type 'number | IExpr<{ mapper: Mapper<unknown, number>; usedRef: IUsedRef<never>; }> | IColumn<{ tableAlias: string; columnAlias: string; mapper: Mapper<unknown, number>; }> | IExprSelectItem<{ mapper: Mapper<unknown, number>; tableAlias: string; alias: string; usedRef: IUsedRef<...>; }> | (IQueryBase<...> & IQueryBase<.....'.",
      "category": 1,
      "code": 2322,
      "next": {
        "messageText": "Type 'Query<{ fromClause: IFromClause<{ outerQueryJoins: undefined; currentJoins: readonly Join<{ tableAlias: \"inListTable\"; nullable: false; columns: { readonly v: Column<{ tableAlias: \"inListTable\"; columnAlias: \"v\"; mapper: Mapper<unknown, number>; }>; }; ... 4 more ...; mutableColumns: readonly []; }>[]; }>; ... 4 mor...' is not assignable to type 'IQueryBase<{ fromClause: IFromClause<FromClauseData>; selectClause: [IColumn<{ tableAlias: string; columnAlias: string; mapper: Mapper<unknown, number>; }> | IExprSelectItem<{ mapper: Mapper<unknown, number>; tableAlias: string; alias: string; usedRef: IUsedRef<...>; }>]; limitClause: LimitClause | undefined; compou...'.",
        "category": 1,
        "code": 2322,
        "next": {
          "messageText": "Type 'Query<{ fromClause: IFromClause<{ outerQueryJoins: undefined; currentJoins: readonly Join<{ tableAlias: \"inListTable\"; nullable: false; columns: { readonly v: Column<{ tableAlias: \"inListTable\"; columnAlias: \"v\"; mapper: Mapper<unknown, number>; }>; }; ... 4 more ...; mutableColumns: readonly []; }>[]; }>; ... 4 mor...' is not assignable to type 'IQueryBase<{ fromClause: IFromClause<{ outerQueryJoins: readonly IJoin<JoinData>[] | undefined; currentJoins: undefined; }>; selectClause: readonly (ColumnMap | IColumn<ColumnData> | ColumnRef | IExprSelectItem<...>)[] | undefined; limitClause: LimitClause | undefined; compoundQueryClause: undefined; compoundQueryLi...'.",
          "category": 1,
          "code": 2322,
          "next": {
            "messageText": "Types of property 'fromClause' are incompatible.",
            "category": 1,
            "code": 2326,
            "next": {
              "messageText": "Type 'IFromClause<{ outerQueryJoins: undefined; currentJoins: readonly Join<{ tableAlias: \"inListTable\"; nullable: false; columns: { readonly v: Column<{ tableAlias: \"inListTable\"; columnAlias: \"v\"; mapper: Mapper<unknown, number>; }>; }; ... 4 more ...; mutableColumns: readonly []; }>[]; }>' is not assignable to type 'IFromClause<{ outerQueryJoins: readonly IJoin<JoinData>[] | undefined; currentJoins: undefined; }>'.",
              "category": 1,
              "code": 2322,
              "next": {
                "messageText": "Type '{ outerQueryJoins: undefined; currentJoins: readonly Join<{ tableAlias: \"inListTable\"; nullable: false; columns: { readonly v: Column<{ tableAlias: \"inListTable\"; columnAlias: \"v\"; mapper: Mapper<unknown, number>; }>; }; ... 4 more ...; mutableColumns: readonly []; }>[]; }' is not assignable to type '{ outerQueryJoins: readonly IJoin<JoinData>[] | undefined; currentJoins: undefined; }'.",
                "category": 1,
                "code": 2322,
                "next": {
                  "messageText": "Types of property 'currentJoins' are incompatible.",
                  "category": 1,
                  "code": 2326,
                  "next": {
                    "messageText": "Type 'readonly Join<{ tableAlias: \"inListTable\"; nullable: false; columns: { readonly v: Column<{ tableAlias: \"inListTable\"; columnAlias: \"v\"; mapper: Mapper<unknown, number>; }>; }; originalColumns: { readonly v: Column<{ tableAlias: \"inListTable\"; columnAlias: \"v\"; mapper: Mapper<...>; }>; }; primaryKey: undefined; cand...' is not assignable to type 'undefined'.",
                    "category": 1,
                    "code": 2322
                  }
                }
              }
            }
          }
        }
      }
    },
    "code": 2322,
    "category": 1,
    "length": 91,
    "start": 293
  }
]