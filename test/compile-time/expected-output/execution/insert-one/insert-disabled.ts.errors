[
  {
    "messageText": {
      "messageText": "Argument of type 'Table<{ isLateral: false; alias: \"test\"; columns: { readonly testId: Column<{ tableAlias: \"test\"; columnAlias: \"testId\"; mapper: Mapper<unknown, bigint>; }>; readonly testVal: Column<{ tableAlias: \"test\"; columnAlias: \"testVal\"; mapper: Mapper<...>; }>; }; ... 11 more ...; explicitAutoIncrementValueEnabled: false; }>' is not assignable to parameter of type 'ITable<TableData> & { insertEnabled: true; }'.",
      "category": 1,
      "code": 2345,
      "next": {
        "messageText": "Type 'Table<{ isLateral: false; alias: \"test\"; columns: { readonly testId: Column<{ tableAlias: \"test\"; columnAlias: \"testId\"; mapper: Mapper<unknown, bigint>; }>; readonly testVal: Column<{ tableAlias: \"test\"; columnAlias: \"testVal\"; mapper: Mapper<...>; }>; }; ... 11 more ...; explicitAutoIncrementValueEnabled: false; }>' is not assignable to type '{ insertEnabled: true; }'.",
        "category": 1,
        "code": 2322,
        "next": {
          "messageText": "Types of property 'insertEnabled' are incompatible.",
          "category": 1,
          "code": 2326,
          "next": {
            "messageText": "Type 'false' is not assignable to type 'true'.",
            "category": 1,
            "code": 2322
          }
        }
      }
    },
    "code": 2345,
    "category": 1,
    "length": 4,
    "start": 302
  }
]